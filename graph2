import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Data preparation
data = {
    'Layers': [3, 3, 3],
    'Datasets': ['MNIST', 'EMNIST', 'Fashion'],
    'No_residual': [96.6, 71.6, 84.3],
    'Append': [98.4, 72.0,  87.1],
    'Average': [97.2,  71.9,  85.8]
}
df = pd.DataFrame(data)

# Calculate the mean for each method (No residual, Average, Append) at each layer
df_mean = df.groupby(['Layers','Datasets']).mean(numeric_only=True)

# Plotting
layers = df_mean.index
bar_width = 0.25

plt.figure(figsize=(12, 8))

# Positions of the bars on the x-axis
r1 = np.arange(len(layers))
r2 = [x + bar_width for x in r1]
r3 = [x + bar_width for x in r2]

# Create bars
plt.bar(r1, df_mean['No_residual'], color='blue', width=bar_width, edgecolor='grey', label='No Residual')
plt.bar(r2, df_mean['Average'], color='orange', width=bar_width, edgecolor='grey', label='Average')
plt.bar(r3, df_mean['Append'], color='green', width=bar_width, edgecolor='grey', label='Append')

# Add labels
plt.xlabel('Layers', fontweight='bold', fontsize=14)
plt.ylabel('Average Accuracy', fontweight='bold', fontsize=14)
plt.ylim(60, 100)
plt.xticks([r + bar_width for r in range(len(layers))], layers)
# Add title and legend
plt.title('Accuracy at Each Layer')
plt.legend(prop={'size': 18})

# Display the plot
plt.show()
